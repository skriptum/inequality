# Plots

```{r}
# Load necessary libraries
library(patchwork)
library(tidyverse)
library(ggthemes)
library(ggrepel)

df <- read_csv("../../data/proc/dwa_full.csv")
df_simple <- read_csv("../../data/proc/dwa_simple.csv")
```
how to split up the countries?
```{r}
before1990 = c("BE", "DE", "ES","FR", "GR", "IE", "IT", "LU", "NL", "PT", "I9")
post1990 = c("AT", "CY", "EE","FI", "HR", "LT", "LV", "MT", "SI", "SK" , "I9")
```



### 1a: Tenant - Owner Wealth Ratio

```{r}
df_ratio <- df %>%
  filter(
    INSTR_ASSET == "NWA",
    DWA_GRP %in% c("HSO", "HST"),
    UNIT_MEASURE == "EUR_R_POP"
  ) %>%
  select(REF_AREA, DWA_GRP, OBS_VALUE, TIME_PERIOD) %>%
  pivot_wider(
    names_from = DWA_GRP,
    values_from = OBS_VALUE
  ) %>%
  mutate(
    ratio = HSO / HST
  )
```

```{r}
p2 <- df_ratio %>%
  filter(REF_AREA %in% before1990) %>%
  ggplot(aes(x = TIME_PERIOD, y = ratio, color = REF_AREA)) +
    geom_line(linewidth=0.5) +
    geom_point(shape=5, size= 1) 
p2
```

```{r}
p2 <- p2 +
    scale_color_brewer(palette = "Set1")+  
    labs(
      x = "Time Period",
      y = "Ratio",
      color = "Country",
      caption = "Source: ECB DWA, own calculations and visualization"
    ) +
    theme_tufte() +
    theme(
      legend.position = "right",
      legend.title = element_blank(),
      panel.border = element_rect(fill = NA, color = "black"),
      ) 

ggsave(p2, filename = "../../output/desc/tenant_owner_wealth_ratio.png", width = 8, height = 5, dpi = 500)
p2
```

### 1b: T-O-WR: Subplots

```{r}
eastern  <- c("EE", "LT", "LV", "SI", "SK", "HR", "HU")
western  <- c("AT", "BE", "DE", "FR", "IE", "LU", "NL", "FI")
southern <- c("CY", "ES", "GR", "MT", "PT", "IT")

```

```{r}
df_east <- df_ratio %>% filter(REF_AREA %in% eastern)
df_west <- df_ratio %>% filter(REF_AREA %in% western)
df_south <- df_ratio %>% filter(REF_AREA %in% southern)
df_I9 <- df_ratio %>% filter(REF_AREA == "I9") # Euro Area Average
```

```{r}
set.seed(123)
make_ratio_plot <- function(df, title) {
  df %>%
    mutate(label = if_else(TIME_PERIOD == max(TIME_PERIOD), 
                     as.character(REF_AREA), NA_character_)
           ) %>%
    ggplot(aes(x = TIME_PERIOD, y = ratio, color = REF_AREA)) +
      geom_line(linewidth=0.5) +
      # custom EU Average
      geom_line(data = df_I9, color = "black", linewidth = 0.5) +
      # labels at the End of the Line
      geom_label_repel(
        aes(label = label), size=3, nudge_x=2, 
        max.time=1, na.rm=T, direction ="y") +
      # custom label for EU
      geom_label_repel(
        data = df_I9 %>% filter(TIME_PERIOD == max(TIME_PERIOD)),
        label = "EU", color = "black",
        size=3, nudge_x=1, max.time=1, na.rm=T, direction ="y"
      ) +
      labs(
        x = element_blank(),
        y = "Owner-Tenant Wealth Ratio",
        title= title
      ) +
      theme_tufte() +
      theme(
        legend.position = "none",
        panel.border = element_rect(fill = NA, color = "black"),
      ) 
}
```

```{r}
p_east <- make_ratio_plot(df_east, "Eastern Europe")
p_west <- make_ratio_plot(df_west, "Western Europe")
p_south <- make_ratio_plot(df_south, "Southern Europe")

ratio_plot <- patchwork::wrap_plots(
  p_east, p_west, p_south, 
  ncol = 3, axis_titles = "collect", axes="collect"
  ) +
  plot_annotation(caption = "Source: ECB DWA, own calculations and visualisations", theme = theme_tufte())
ratio_plot
ggsave(ratio_plot, filename = "../../output/desc/tenant_owner_wealth_ratio_europe.png", width = 8, height = 5, dpi = 500)
```



### 2a: indiv. Portfolios
```{r}
df_asset <- df_simple %>%
  filter(
    TIME_PERIOD == "2023-01-01", #only one data and latest for all countrie s(NL doesnt have 2024)
    UNIT_MEASURE == "EUR" # aggregate EUR
  ) %>%
  arrange(desc(DWA_GRP)) %>% #sort GRP descending 
  # shares for all assets
  summarise(
    REF_AREA = REF_AREA,
    DWA_GRP = DWA_GRP,
    share_BW = BW / TW,
    share_FW = FW / TW,
    share_DEP = DEP / TW,
    share_HW = HW / TW
  ) %>%
  # long dataframe = easier for ploting
  pivot_longer(
    cols = starts_with("share_"),
    names_to = "asset_class",
    values_to = "share"
  ) 
p3 <- df_asset %>%
  filter(!( REF_AREA %in% c("I9", "HU"))) %>% 
  ggplot(aes(x = DWA_GRP, y = share, fill = asset_class)) +
    geom_col(position = "stack") +  # stack the bars to make 1
    facet_wrap(~ REF_AREA, ncol = 4, scales = "free_x")  #x axis should appear at every plot
p3
```

```{r}
p3 <- p3 +
    scale_fill_manual(
      # change the colors of the stacks
      values = c(
        "share_BW" = "#cdb04b",
        "share_FW" = "#377EB8",
        "share_DEP" = "#11ad52",
        "share_HW" = "#9f464f"
      ),
      # change the labels
      labels = c(
        "share_BW" = "Business Wealth",
        "share_FW" = "Financial Wealth",
        "share_DEP" = "Deposits",
        "share_HW" = "Housing Wealth"
      )
    ) +
    labs(
      x = "Wealth Decile",
      y = "Share of Total Wealth",
      fill = "Asset Class",
      # special caption to explain the GRP abbreviations
      caption = "Source: ECB DWA, own calculations and visualization" 
    ) +
    theme_tufte() +
    theme(
      legend.position = "bottom",
      legend.title = element_blank(),
      panel.border = element_rect(fill = NA, color = "black"),
    )  +
    scale_x_discrete(
      labels = c(
        "B50" = "1-5",
        "D06" = "6",
        "D07" = "7",
        "D08" = "8",
        "D09" = "9",
        "D10" = "10"
      )
  )
    
ggsave(p3, filename = "../../output/appendix/portfolios.png", width = 8, height = 12, dpi = 500)
p3
```

### 2b: I9 Portfolios

```{r}
# european focus
p_europe <- df_asset %>%
  filter(REF_AREA == "I9") %>%
  ggplot(aes(x = DWA_GRP, y = share, fill = asset_class)) +
    geom_col(position = "stack") +
    scale_fill_manual(
      # change the colors of the stacks
      values = c(
        "share_BW" = "#cdb04b",
        "share_FW" = "#377EB8",
        "share_DEP" = "#11ad52",
        "share_HW" = "#9f464f"
      ),
      # change the labels
      labels = c(
        "share_BW" = "Business",
        "share_FW" = "Financial",
        "share_DEP" = "Deposits",
        "share_HW" = "Housing"
      )
    ) +
    labs(
      x = "Wealth Decile",
      y = "Share of Total Wealth",
      fill = "Asset Class:",
      # special caption to explain the GRP abbreviations
      caption = "Source: ECB DWA, own calculations and visualization" 
    ) +
    theme_tufte() +
    theme(
      legend.position = "bottom",
      panel.border = element_rect(fill = NA, color = "black"),
    )  +
  # custom x axis
  scale_x_discrete(
    labels = c(
      "B50" = "1-5",
      "D06" = "6",
      "D07" = "7",
      "D08" = "8",
      "D09" = "9",
      "D10" = "10"
    )
  ) #+
  #rotate x asis labels
  #theme(axis.text.x = element_text(angle = 90, hjust = 1))
p_europe
ggsave(p_europe, filename = "../../output/desc/portfolio_europe.png", width = 5, height =5, dpi = 500)
```


### 3: Time: Asset Distribution

```{r}
df_growth <- df_simple %>%
  filter(
    UNIT_MEASURE == "EUR_R_POP", # only per capita
    DWA_GRP %in% c("B50", "D06", "D07", "D08", "D09", "D10") #drop other groups
  ) %>%
  select(TIME_PERIOD, REF_AREA, DWA_GRP, UNIT_MEASURE, DEP, FW, BW, HW, DEBT, TW_NET) %>%
  pivot_longer(
    cols = c(DEP, FW, BW, HW, DEBT, TW_NET),
    names_to = "INSTR_ASSET",
    values_to = "OBS_VALUE"
  )

df_growth <- df_growth %>%
  mutate(
    DWA_GRP = case_when(
      DWA_GRP %in% c("D06", "D07", "D08", "D09") ~ "M40",
      TRUE ~ DWA_GRP
    )
  ) %>%
  # mean of the values of M40
  group_by(TIME_PERIOD, REF_AREA, DWA_GRP, INSTR_ASSET) %>%
  summarise(OBS_VALUE = mean(OBS_VALUE, na.rm = TRUE))

df_growth %>%
  filter(
    REF_AREA == "DE",
    TIME_PERIOD == "2011-01-01",
    INSTR_ASSET == "TW_NET"
  )
```

```{r}
p4 <- df_growth %>%
  filter(
    REF_AREA %in% c("I9"),    #Euro 20 Area
    str_detect(TIME_PERIOD, "01-01|06-01"), # filter for first and third quarter
    ) %>%
  transform(DWA_GRP = factor(
    DWA_GRP, levels = c("B50","M40", "D10"), # order of the GRP for the plot
    labels = c("Bottom 50%", "Middle 40%", "Top 10%") # name of the GRP for the plot
    )) %>%
  ggplot(aes(x = TIME_PERIOD)) + #same x axis for all groups
  geom_area(
    data = ~ .x %>% filter(INSTR_ASSET != "TW_NET"), # dont add the Total to the stacks
    aes(y = OBS_VALUE, fill = INSTR_ASSET),
    position = "stack" #stack the lines on top of each other
  ) +
  # line for total
  geom_line(
    data = ~ .x %>% filter(INSTR_ASSET == "TW_NET"),
    aes(y = OBS_VALUE, group = 1, color = "Net Wealth"), #name of the line
    size = 1,
    linetype = "11" # small dots
  ) +
  facet_wrap(~ DWA_GRP, ncol = 3, scales = "free_y")  # seperate plot for all GRP, with differnt y axis

p4
```

```{r}
p4 <- p4 +
  geom_hline(
    yintercept = 0,
    color = "black",
    linewidth = 0.5
  ) +
  scale_fill_manual(
    #change the colors of the stacks
    values = c(   
        "BW" = "#cdb04b",
        "FW" = "#377EB8",
        "DEP" = "#11ad52",
        "HW" = "#9f464f",
        "DEBT" = "grey"
      ),
    # change the labels
    labels = c(
      "BW" = "Business Wealth",
      "FW" = "Financial Wealth",
      "DEP" = "Deposits",
      "HW" = "Housing Wealth",
      "DEBT" = "Debt"
    )
  ) +
  # adjust the line plot
  scale_color_manual(
    values = c("Net Wealth" = "black"),
    labels = c("Net Wealth" = "Net Wealth") 
  ) +
  labs(
    x = "Time Period",
    y = "Wealth per Capita (TEUR)",
    fill = "Asset Class",
    caption = "Source: ECB DWA, own calculations and visualization"
  ) +
  theme_tufte() +
  theme(
    legend.position = "bottom",
    legend.title = element_blank(),
    panel.border = element_rect(fill = NA, color = "black"),
  )

ggsave(p4, filename = "../../output/desc/asset_distribution_over_time.png", width = 8, height = 5, dpi = 500)
p4
```

## 4a: I9 Asset Distribution

```{r}
df_shares <- df_simple %>%
  filter(
    TIME_PERIOD == "2022-01-01", #only one data
    UNIT_MEASURE == "EUR" # aggregate EUR
  ) %>%
  select(REF_AREA, DWA_GRP, DEP, FW, BW, HW_NET, TW_NET) %>%
  group_by(REF_AREA) %>% # group by country and decile
  reframe(
    DWA_GRP = DWA_GRP,
    Share_DEP = DEP / sum(DEP),
    Share_FW = FW / sum(FW),
    Share_BW = BW / sum(BW),
    Share_HW = HW_NET / sum(HW_NET),
    Share_TW = TW_NET / sum(TW_NET)
  ) %>%
  # create the middle class
  mutate(
    DWA_GRP = case_when(
      DWA_GRP %in% c("D06", "D07", "D08", "D09") ~ "M40",
      TRUE ~ DWA_GRP
    )
  ) %>%
  # reorder the groups, to reverse
  mutate(DWA_GRP = factor(DWA_GRP, levels = c("D10", "M40", "B50"))) # reorder
```

```{r}
p_shares <- df_shares %>%
  filter(REF_AREA == "I9") %>%
  ggplot(aes(fill=DWA_GRP)) +
  geom_col(aes(x="Total Wealth", y=Share_TW )) +
  geom_col(aes(x="Housing Wealth", y=Share_HW)) +
  geom_col(aes(x="Business Wealth", y=Share_BW)) +
  geom_col(aes(x="Financial Wealth", y=Share_FW)) +
  coord_flip() 
p_shares
```

```{r}
p_shares <- p_shares +
    scale_fill_manual(
      # change the colors of the stacks
      values = c(
        "B50" = "#539987",
        "M40" = "#885A89",
        "D10" = "#CC978E"
        ),
      labels = c(
        "B50" = "Bottom 50%",
        "M40" = "Middle 40%",
        "D10" = "Top 10%"
      )
    ) + 
    labs(
      x = element_blank(),
      y = "Share",
      fill = "Wealth Decile",
      caption = "Source: ECB DWA, own calculations and visualization"
    ) +
    theme_tufte() +
    theme(
      legend.position = "bottom",
      legend.title = element_blank(),
      panel.border = element_rect(fill = NA, color = "black"),
    ) +
    theme(axis.ticks.y = element_blank()) + #remove ticks 
    guides(fill = guide_legend(ncol = 3)) # put the legend in one line
      

ggsave(p_shares, filename = "../../output/desc/asset_distribution_decile.png", width = 5, height = 5, dpi = 500)
p_shares
```

### 4b: indiv. Asset Distribution

```{r}
df_shares_indiv <- df_shares %>%
  select(!Share_DEP) %>%
  pivot_longer(
    cols = starts_with("Share_"),
    names_to = "asset_class",
    values_to = "Share"
  ) 

# reordering according to T10 share
d10_shares_indiv <- df_shares_indiv %>%
  filter(DWA_GRP == "D10") %>%
  select(REF_AREA, asset_class, D10_share = Share)
```

```{r}
make_share_plot <- function(df) {
  df %>%
    left_join(d10_shares_indiv, by = c("REF_AREA", "asset_class")) %>% #join T10 shares
    mutate(REF_AREA = fct_reorder(REF_AREA, D10_share)) %>% #order according to T10 share
    ggplot(aes(fill=DWA_GRP)) +
      geom_col(aes(y=REF_AREA, x=Share)) 
}
```

```{r}
pretty_share_plot <- function(share_plot, title) {
  share_plot +
    scale_fill_manual(
      # change the colors of the stacks
      values = c(
        "B50" = "#539987",
        "M40" = "#885A89",
        "D10" = "#CC978E"
      ),
      labels = c(
        "B50" = "Bottom 50%",
        "M40" = "Middle 40%",
        "D10" = "Top 10%"
      )
    ) + 
    labs(
      x = "Share of Total Wealth",
      y = element_blank(),
      fill = "Wealth Decile",
      title = title, 
    ) +
    theme_tufte() +
    theme(
      legend.title = element_blank(),
      panel.border = element_rect(fill = NA, color = "black"),
    ) +
    guides(fill = guide_legend(ncol = 3)) + # put the legend in one line
    theme(axis.ticks.y = element_blank())  #remove ticks 
}
```

```{r}
p_share_TW <- make_share_plot(df_shares_indiv %>% filter(asset_class == "Share_TW")) 
p_share_TW <- pretty_share_plot(p_share_TW, "Net Wealth")

p_share_HW <- make_share_plot(df_shares_indiv %>% filter(asset_class == "Share_HW"))
p_share_HW <- pretty_share_plot(p_share_HW, "Housing Wealth")

p_share_FW <- make_share_plot(df_shares_indiv %>% filter(asset_class == "Share_FW"))
p_share_FW <- pretty_share_plot(p_share_FW, "Financial Wealth")

p_share_BW <- make_share_plot(df_shares_indiv %>% filter(asset_class == "Share_BW"))
p_share_BW <- pretty_share_plot(p_share_BW, "Business Wealth")
```

```{r}
wrapped_shares_plot <- wrap_plots(
  p_share_TW, p_share_HW, p_share_FW, p_share_BW,
  ncol = 2, guides="collect", axis_titles = "collect_x"
) +
  plot_annotation(
    caption = "Source: ECB DWA, own calculations and visualisation", 
    theme = theme_tufte()) &
  theme(legend.position = 'bottom')

wrapped_shares_plot
ggsave(wrapped_shares_plot, filename = "../../output/appendix/asset_distribution_individual.png", width = 8, height = 12, dpi = 500)
  
```


## 5: Ownership

```{r}
df_owner <- read_csv("../../data/proc/ownership.csv")
```

```{r}
#plot Europe Differences between years
df_owner %>%
  filter(
    DWA_GRP != "ALL", # drop the average group
    REF_AREA %in% c("DE", "BE", "NL", "AT", "ES", "FR", "IT","I9")
  ) %>%
  ggplot(aes(x = DWA_GRP, y = OWNER, group=JAHR)) +
    geom_line(aes(color = as.factor(JAHR)), linewidth = 1) +
    facet_wrap(~REF_AREA, scales = "free_x", ncol=4)
```

- relevant = I9 = Euro Area = almost no change
- different kinks, compare (AT,DE,FR) to (ES,IT,NL)

### 5a: House Prices

```{r}
df_house <- read_csv("../../data/proc/prices.csv") 

df_house <- df_house %>%
  filter(
    TIME_PERIOD >= "2010-01-01",
    TIME_PERIOD < "2022-01-01",
    )
```


```{r}
#quick plot
p5 <- df_house %>%
  filter(REF_AREA %in% before1990) %>% #selected countries
  ggplot(aes(x = TIME_PERIOD, y = HP_R_N, color = REF_AREA)) +
    geom_line(linewidth = 0.5) +
    geom_hline(yintercept = 100, linetype = "dashed", color = "black") 
p5
```
trajectories: 
- IT, ES, = lower
- FR, BE = no change
- DE, AT, EE = increase (EE completely bonkers)
- HU, NL = down till 2015, increase after
- overall Euro ARea = increase 

maybe split up after euroepan areas (south, north, east?)

```{r}
p5 <- p5 +
    scale_color_brewer(palette = "Set1") +  
    labs(
      x = "Time Period",
      y = "House Price Index (2010 = 100)",
      color = "Country",
      caption = "Source: ECB DWA, own calculations and visualization"
    ) +
    theme_tufte() +
    theme(
      legend.position = c(0.1,0.75),
      legend.title = element_blank(),
      panel.border = element_rect(fill = NA, color = "black"),
    ) +
    guides(color = guide_legend(ncol = 2))
ggsave(p5, filename = "../../output/desc/house_prices.png", width = 4, height = 5, dpi = 500)
p5
```

## 5b: House: Subplots

```{r}
eastern  <- c("EE", "LT", "LV", "SI", "SK", "HR", "HU")
western  <- c("AT", "BE", "DE", "FR", "IE", "LU", "NL", "FI")
southern <- c("CY", "ES", "GR", "MT", "PT", "IT")
```

```{r}
df_east <- df_house %>% filter(REF_AREA %in% eastern)
df_west <- df_house %>% filter(REF_AREA %in% western)
df_south <- df_house %>% filter(REF_AREA %in% southern)
df_I9 <- df_house %>% filter(REF_AREA == "I9") # Euro Area Average
```

```{r}
set.seed(1) # for reproducibility
make_price_plot <- function(df, title) {
  df %>%
    mutate(label = if_else(TIME_PERIOD == max(TIME_PERIOD), 
                     as.character(REF_AREA), NA_character_)
           ) %>%
    ggplot(aes(x = TIME_PERIOD, y = HP_R_N, color = REF_AREA)) +
      # lines for the prices
      geom_line(linewidth = 0.5) +
      # custom EU Average
      geom_line(data = df_I9, color = "black", linewidth = 0.5) +
      # 2010 = 100 Line
      geom_hline(yintercept = 100, linetype = "dashed", color = "black") +
      # colored labels at the end of lines
      geom_label_repel(
        aes(label = label), size=3, nudge_x=2, 
        max.time=1, na.rm=T, direction ="y") +
      # custom label for EU
      geom_label_repel(
        data = df_I9 %>% filter(TIME_PERIOD == max(TIME_PERIOD)),
        label = "EU", color = "black",
        size=3, nudge_x=1, max.time=1, na.rm=T, direction ="y"
      ) +
      # fixed y sclae for all plots
      scale_y_continuous(limits = c(60, 200)) +
      labs(
        x = element_blank(),
        y = "Real House Price Index",
        title= title
      ) +
      #typical adjustment
      theme_tufte() +
      theme(
        legend.position = "none",
        panel.border = element_rect(fill = NA, color = "black"),
      ) 
}
p_east <- make_price_plot(df_east, "Eastern Europe")
p_west <- make_price_plot(df_west, "Western Europe")
p_south <- make_price_plot(df_south, "Southern Europe")
```



```{r}
#combine
price_plot <- patchwork::wrap_plots(
  p_east, p_west, p_south, 
  ncol = 3, axis_titles = "collect", axes="collect"
  ) +
  plot_annotation(caption = "2010 = 100
                  Source: BIS, own visualisation", theme = theme_tufte())
price_plot
```

```{r}
ggsave(price_plot, filename = "../../output/desc/house_prices_europe.png", width = 8, height = 5, dpi = 500)
```

